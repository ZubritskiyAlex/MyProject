# Generated by Django 3.2.4 on 2021-06-03 17:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя категории')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'Category',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Your name or Brand name')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='Email')),
                ('password', models.CharField(max_length=30, verbose_name='Password')),
                ('image', models.ImageField(upload_to='', verbose_name='Image')),
                ('age', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(102)], verbose_name='Age')),
                ('date_created', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Store name')),
                ('url', models.URLField(blank=True, null=True, unique=True, verbose_name='URL')),
                ('description', models.TextField(verbose_name='Description')),
                ('tranding_category', models.IntegerField(choices=[(1, 'Digital'), (2, 'Apparel'), (3, 'Accessories'), (4, 'Premium AS Colour Collection'), (5, 'Conscious Collection'), (6, 'Home')])),
                ('popular_product', models.IntegerField(choices=[(1, 'Staple Tee'), (2, 'Premium Hoodie'), (3, 'Face Masks')])),
                ('date_created', models.DateField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teespring.user')),
            ],
            options={
                'verbose_name': 'Магазин',
                'verbose_name_plural': 'Магазины',
                'db_table': 'Store',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Product name')),
                ('description', models.TextField(null=True, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Price')),
                ('date_created', models.DateField(auto_now=True)),
                ('is_tranding_category', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to='', verbose_name='Image')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teespring.category', verbose_name='Category')),
                ('stores', models.ManyToManyField(to='teespring.Store', verbose_name='Stores')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'db_table': 'Product',
            },
        ),
    ]
